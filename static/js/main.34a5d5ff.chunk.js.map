{"version":3,"sources":["App.module.css","components/UI/Row/Row.module.css","components/UI/Utilities.module.css","components/UI/Card/Card.module.css","components/UI/Row/Row.js","components/UI/InputWrapper/InputWrapper.js","components/UI/Card/Card.js","store/status-state-context.js","components/StatusStateParser/StatusStateParser.js","components/SamplePostBody/SamplePostBody.js","components/AdditionalWebFields/AdditionalWebFields.js","assets/lds-logo-white.png","App.js","reportWebVitals.js","index.js"],"names":["module","exports","Row","props","className","classes","row","children","Input","label","utilities","d_none","decimalValue","Card","card","StatusStateContext","createContext","value","onChange","StatusStateContextProvider","useState","statusState","setStatusState","Provider","newStatusState","StatusStateParser","ssCtx","useContext","statusStateRefs","ref","useRef","val","type","name","statusStateInput","calcStatusState","forEach","el","current","checked","useEffect","htmlFor","statusStateInputVal","parseInt","statusStateFlagDec","inputRef","max","min","onFocus","e","currentTarget","select","map","ind","Pre","styled","pre","SamplePostBody","JSON","stringify","webData","status_state","AdditionalWebFields","id","key","trip_time","cur_val","trip_val","setWebData","idRef","keyRef","tripTimeRef","curValRef","tripRateRef","onChangeHandler","inputDataObj","App","wrapper","src","logo","alt","header_logo","component_wrapper","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"kHACAA,EAAOC,QAAU,CAAC,QAAU,qBAAqB,kBAAoB,+BAA+B,YAAc,2B,oBCAlHD,EAAOC,QAAU,CAAC,IAAM,mB,gBCAxBD,EAAOC,QAAU,CAAC,OAAS,0BAA0B,QAAU,2BAA2B,SAAW,8B,gBCArGD,EAAOC,QAAU,CAAC,KAAO,qB,uMCIVC,EAHH,SAAAC,GACV,OAAO,qBAAKC,UAAWC,IAAQC,IAAxB,SAA8BH,EAAMI,Y,yBCc9BC,EAbD,SAACL,GAEb,OACE,eAAC,EAAD,WACE,wBAAOC,UAAU,QAAjB,UACGD,EAAMM,MACP,uBAAML,UAAWM,IAAUC,OAA3B,cAAqCR,EAAMS,aAA3C,UAEDT,EAAMI,a,iBCPEM,EAHF,SAAAV,GACX,OAAO,qBAAKC,UAAWC,IAAQS,KAAxB,SAA+BX,EAAMI,Y,OCDxCQ,EAAqBC,wBAAc,CACvCC,MAAO,EACPC,SAAU,eAGCC,EAA6B,SAAChB,GAAW,IAAD,EACbiB,mBAAS,GADI,mBAC5CC,EAD4C,KAC/BC,EAD+B,KAOnD,OACE,cAACP,EAAmBQ,SAApB,CACEN,MAAO,CACLA,MAAOI,EACPH,SARkB,SAACM,GACvBF,EAAeE,KAIf,SAMGrB,EAAMI,YAKEQ,ICwIAU,G,MAzJW,SAACtB,GAGzB,IAAMuB,EAAQC,qBAAWZ,GAEnBa,EAAkB,CACtB,CACEnB,MAAO,aACPoB,IAAKC,iBAAO,MACZC,IAAK,EACLC,KAAM,QACNC,KAAM,cAER,CACExB,MAAO,WACPoB,IAAKC,iBAAO,MACZC,IAAK,EACLC,KAAM,QACNC,KAAM,cAER,CACExB,MAAO,UACPoB,IAAKC,iBAAO,MACZC,IAAK,EACLC,KAAM,QACNC,KAAM,cAER,CACExB,MAAO,aACPoB,IAAKC,iBAAO,MACZC,IAAK,EACLC,KAAM,QACNC,KAAM,cAER,CACExB,MAAO,WACPoB,IAAKC,iBAAO,MACZC,IAAK,EACLC,KAAM,QACNC,KAAM,cAER,CACExB,MAAO,UACPoB,IAAKC,iBAAO,MACZC,IAAK,EACLC,KAAM,QACNC,KAAM,cAER,CACExB,MAAO,eACPoB,IAAKC,iBAAO,MACZC,IAAK,EACLC,KAAM,QACNC,KAAM,cAER,CACExB,MAAO,SACPoB,IAAKC,iBAAO,MACZC,IAAK,EACLC,KAAM,QACNC,KAAM,cAER,CAAExB,MAAO,WAAYoB,IAAKC,iBAAO,MAAOC,IAAK,EAAGC,KAAM,YACtD,CAAEvB,MAAO,kBAAmBoB,IAAKC,iBAAO,MAAOC,IAAK,GAAIC,KAAM,YAC9D,CAAEvB,MAAO,YAAaoB,IAAKC,iBAAO,MAAOC,IAAK,GAAIC,KAAM,YACxD,CAAEvB,MAAO,YAAaoB,IAAKC,iBAAO,MAAOC,IAAK,GAAIC,KAAM,YACxD,CAAEvB,MAAO,aAAcoB,IAAKC,iBAAO,MAAOC,IAAK,IAAKC,KAAM,YAC1D,CAAEvB,MAAO,iBAAkBoB,IAAKC,iBAAO,MAAOC,IAAK,IAAKC,KAAM,YAC9D,CAAEvB,MAAO,WAAYoB,IAAKC,iBAAO,MAAOC,IAAK,IAAKC,KAAM,YACxD,CAAEvB,MAAO,gBAAiBoB,IAAKC,iBAAO,MAAOC,IAAK,KAAMC,KAAM,YAC9D,CAAEvB,MAAO,WAAYoB,IAAKC,iBAAO,MAAOC,IAAK,KAAMC,KAAM,YACzD,CAAEvB,MAAO,WAAYoB,IAAKC,iBAAO,MAAOC,IAAK,KAAMC,KAAM,YACzD,CAAEvB,MAAO,aAAcoB,IAAKC,iBAAO,MAAOC,IAAK,KAAMC,KAAM,YAC3D,CAAEvB,MAAO,UAAWoB,IAAKC,iBAAO,MAAOC,IAAK,MAAOC,KAAM,YACzD,CAAEvB,MAAO,WAAYoB,IAAKC,iBAAO,MAAOC,IAAK,MAAOC,KAAM,aAGtDE,EAAmBJ,iBAAO,MAE1BK,EAAkB,WACtB,IAAIX,EAAiB,EAErBI,EAAgBQ,SAAQ,SAACC,GACRA,EAAGR,IAAIS,QACXC,UAASf,GAAkBa,EAAGN,QAG3CL,EAAMR,SAASM,IA2BjB,OAJAgB,qBAAU,WACRZ,EAAgB,GAAGC,IAAIS,QAAQC,SAAU,IACxC,IAGD,eAAC,EAAD,WACE,uDACA,eAAC,EAAD,WACE,uBAAOE,QAAQ,eAAerC,UAAU,QAAxC,0BAGA,uBACE4B,KAAK,SACLC,KAAK,eACLJ,IAAKK,EACLjB,MAAOS,EAAMT,MACbC,SApCiB,WACvB,IAAMwB,EAAsBC,SAAST,EAAiBI,QAAQrB,QAAU,EAExEW,EAAgBQ,SAAQ,SAACC,GACvB,IAAMO,EAAqBP,EAAGN,IAC5Bc,EAAWR,EAAGR,IAGdgB,EAASP,QAAQC,QADfK,EAAqB,GAEpBA,EAAqBF,KAAyBE,GAG9C,EAAIF,KAAyBE,KAIpClB,EAAMR,SAASwB,IAqBTI,IAAI,QACJC,IAAI,IACJhB,IAAKL,EAAMT,MACX+B,QAAS,SAACC,GAAD,OAAOA,EAAEC,cAAcC,eAInCvB,EAAgBwB,KAAI,SAACf,EAAIgB,GAAL,OACnB,cAAC,EAAD,CACE5C,MAAO4B,EAAG5B,MAEVG,aAAcyB,EAAGN,IACjBE,KAAMI,EAAGJ,MAAQ,GAJnB,SAME,uBACED,KAAMK,EAAGL,KACTC,KAAMI,EAAGJ,KACTJ,IAAKQ,EAAGR,IACRZ,MAAOd,EAAM4B,KAAO,GACpBb,SAAUiB,KATPE,EAAG5B,e,uBC7IZ6C,E,MAAMC,EAAOC,IAAV,uEAqBMC,EAhBQ,SAACtD,GACtB,IAAMuB,EAAQC,qBAAWZ,GAEzB,OACE,gCACE,wDACA,cAACuC,EAAD,UACGI,KAAKC,UAAL,2BACMxD,EAAMyD,SADZ,IACqBC,aAAcnC,EAAMT,SACxC,EACA,SC4FK6C,EAxGa,SAAC3D,GAAW,IAAD,EACPiB,mBAAS,CACrC2C,GAAI,YACJC,IAAK,sBACLC,UAAW,KACXC,QAAS,IACTC,SAAU,OANyB,mBAC9BP,EAD8B,KACrBQ,EADqB,KAQ/BC,EAAQvC,iBAAO,MACnBwC,EAASxC,iBAAO,MAChByC,EAAczC,iBAAO,MACrB0C,EAAY1C,iBAAO,MACnB2C,EAAc3C,iBAAO,MAEjB4C,EAAkB,WACtB,IAAMC,EAAe,CACnBZ,GAAIM,EAAM/B,QAAQrB,MAClB+C,IAAKM,EAAOhC,QAAQrB,MACpBgD,UAAWM,EAAYjC,QAAQrB,MAC/BiD,QAASM,EAAUlC,QAAQrB,MAC3BkD,SAAUM,EAAYnC,QAAQrB,OAEhCmD,EAAW,eACNO,KAIDjD,EAAQC,qBAAWZ,GAEzB,OACE,eAAC,EAAD,WACE,sBAAKX,UAAU,qBAAf,UACE,wDACA,cAAC,EAAD,CAAc6B,KAAK,KAAKxB,MAAM,YAA9B,SACE,uBACEwB,KAAK,KACLJ,IAAKwC,EACLrC,KAAK,SACLf,MAAO2C,EAAQG,GACfhB,IAAI,IACJD,IAAI,YACJ5B,SAAUwD,MAId,cAAC,EAAD,CAAczC,KAAK,MAAMxB,MAAM,MAA/B,SACE,uBACEwB,KAAK,MACLJ,IAAKyC,EACLtC,KAAK,OACLf,MAAO2C,EAAQI,IACf9C,SAAUwD,MAId,cAAC,EAAD,CACEzC,KAAK,SACLxB,MAAqB,KAAdiB,EAAMT,MAAe,UAAY,SAF1C,SAIE,uBACEgB,KAAK,SACLJ,IAAK2C,EACLxC,KAAK,SACLf,MAAO2C,EAAQM,QACfnB,IAAI,IACJD,IAAI,MACJ5B,SAAUwD,MAId,cAAC,EAAD,CACEzC,KAAK,WACLxB,MAAqB,KAAdiB,EAAMT,MAAe,aAAe,YAF7C,SAIE,uBACEgB,KAAK,WACLJ,IAAK0C,EACLvC,KAAK,SACLf,MAAO2C,EAAQK,UACflB,IAAI,IACJD,IAAI,MACJ5B,SAAUwD,MAId,cAAC,EAAD,CACEzC,KAAK,WACLxB,MAAqB,KAAdiB,EAAMT,MAAe,gBAAkB,YAFhD,SAIE,uBACEgB,KAAK,WACLJ,IAAK4C,EACLzC,KAAK,SACLf,MAAO2C,EAAQO,SACfpB,IAAI,IACJD,IAAI,MACJ5B,SAAUwD,SAIhB,cAAC,EAAD,CAAgBd,QAASA,QC5GhB,MAA0B,2C,gBCsB1BgB,G,MAbH,WAEV,OACE,sBAAKxE,UAAWC,IAAQwE,QAAxB,UACE,qBAAKC,IAAKC,EAAMC,IAAI,GAAG5E,UAAWC,IAAQ4E,cAC1C,sBAAK7E,UAAWC,IAAQ6E,kBAAxB,UACE,cAAC,EAAD,IACA,cAAC,EAAD,YCJOC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCCdQ,IAASC,OACP,cAAC,EAAD,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.34a5d5ff.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"App_wrapper__2Rh_f\",\"component_wrapper\":\"App_component_wrapper__26XYY\",\"header_logo\":\"App_header_logo__1FAbg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"row\":\"Row_row__3ANDQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"d_none\":\"Utilities_d_none__2l71Y\",\"d_block\":\"Utilities_d_block__1qCoy\",\"v_hidden\":\"Utilities_v_hidden__3eYIO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__1te4P\"};","import classes from './Row.module.css';\n\nconst Row = props => {\n  return <div className={classes.row}>{props.children}</div>;\n};\nexport default Row;","import Row from \"../Row/Row\";\nimport \"./InputWrapper.css\";\nimport utilities from \"../Utilities.module.css\";\n\nconst Input = (props) => {\n\n  return (\n    <Row>\n      <label className=\"label\">\n        {props.label}\n        <span className={utilities.d_none}>({props.decimalValue})</span>\n      </label>\n      {props.children}\n    </Row>\n  );\n};\n\nexport default Input;\n","import classes from './Card.module.css';\n\nconst Card = props => {\n  return <div className={classes.card}>{props.children}</div>;\n};\nexport default Card;","import { useState, createContext } from \"react\";\n\nconst StatusStateContext = createContext({\n  value: 0,\n  onChange: () => {},\n});\n\nexport const StatusStateContextProvider = (props) => {\n  const [statusState, setStatusState] = useState(0);\n\n  const onChangeHandler = (newStatusState) => {\n    setStatusState(newStatusState);\n  };\n\n  return (\n    <StatusStateContext.Provider\n      value={{\n        value: statusState,\n        onChange: onChangeHandler,\n      }}\n    >\n      {props.children}\n    </StatusStateContext.Provider>\n  );\n};\n\nexport default StatusStateContext;\n","import { useRef, useEffect, useContext } from \"react\";\n\nimport InputWrapper from \"../UI/InputWrapper/InputWrapper\";\nimport Card from \"../UI/Card/Card\";\nimport Row from \"../UI/Row/Row\";\nimport StatusStateContext from \"../../store/status-state-context\";\n\nimport \"./StatusStateParser.css\";\n\nconst StatusStateParser = (props) => {\n  // const [statusState, setStatusState] = useState(0);\n\n  const ssCtx = useContext(StatusStateContext);\n\n  const statusStateRefs = [\n    {\n      label: \"alarm_none\",\n      ref: useRef(null),\n      val: 0,\n      type: \"radio\",\n      name: \"alarm_type\",\n    },\n    {\n      label: \"lds_leak\",\n      ref: useRef(null),\n      val: 1,\n      type: \"radio\",\n      name: \"alarm_type\",\n    },\n    {\n      label: \"partial\",\n      ref: useRef(null),\n      val: 2,\n      type: \"radio\",\n      name: \"alarm_type\",\n    },\n    {\n      label: \"panel_pold\",\n      ref: useRef(null),\n      val: 3,\n      type: \"radio\",\n      name: \"alarm_type\",\n    },\n    {\n      label: \"ext_pold\",\n      ref: useRef(null),\n      val: 4,\n      type: \"radio\",\n      name: \"alarm_type\",\n    },\n    {\n      label: \"low_bat\",\n      ref: useRef(null),\n      val: 5,\n      type: \"radio\",\n      name: \"alarm_type\",\n    },\n    {\n      label: \"remote_panel\",\n      ref: useRef(null),\n      val: 6,\n      type: \"radio\",\n      name: \"alarm_type\",\n    },\n    {\n      label: \"unused\",\n      ref: useRef(null),\n      val: 7,\n      type: \"radio\",\n      name: \"alarm_type\",\n    },\n    { label: \"in_alarm\", ref: useRef(null), val: 8, type: \"checkbox\" },\n    { label: \"flow_in_partial\", ref: useRef(null), val: 16, type: \"checkbox\" },\n    { label: \"flow_trip\", ref: useRef(null), val: 32, type: \"checkbox\" },\n    { label: \"is_moving\", ref: useRef(null), val: 64, type: \"checkbox\" },\n    { label: \"valve_open\", ref: useRef(null), val: 128, type: \"checkbox\" },\n    { label: \"b0_api_trigger\", ref: useRef(null), val: 256, type: \"checkbox\" },\n    { label: \"too_cold\", ref: useRef(null), val: 512, type: \"checkbox\" },\n    { label: \"chan_sel_away\", ref: useRef(null), val: 1024, type: \"checkbox\" },\n    { label: \"chan_mod\", ref: useRef(null), val: 2048, type: \"checkbox\" },\n    { label: \"override\", ref: useRef(null), val: 4096, type: \"checkbox\" },\n    { label: \"alarm_push\", ref: useRef(null), val: 8192, type: \"checkbox\" },\n    { label: \"standby\", ref: useRef(null), val: 16384, type: \"checkbox\" },\n    { label: \"shutdown\", ref: useRef(null), val: 32768, type: \"checkbox\" },\n  ];\n\n  const statusStateInput = useRef(null);\n\n  const calcStatusState = () => {\n    let newStatusState = 0;\n\n    statusStateRefs.forEach((el) => {\n      const refObj = el.ref.current;\n      if (refObj.checked) newStatusState += el.val;\n    });\n\n    ssCtx.onChange(newStatusState);\n  };\n\n  const updateCheckboxes = () => {\n    const statusStateInputVal = parseInt(statusStateInput.current.value) || 0;\n\n    statusStateRefs.forEach((el) => {\n      const statusStateFlagDec = el.val,\n        inputRef = el.ref;\n\n      if (statusStateFlagDec > 7) {\n        inputRef.current.checked =\n          (statusStateFlagDec & statusStateInputVal) === statusStateFlagDec;\n      } else {\n        inputRef.current.checked =\n          (7 & statusStateInputVal) === statusStateFlagDec;\n      }\n    });\n\n    ssCtx.onChange(statusStateInputVal);\n  };\n\n  // Check first radio when component mounts\n  useEffect(() => {\n    statusStateRefs[0].ref.current.checked = true;\n  }, []);\n\n  return (\n    <Card>\n      <h2>Status State Builder:</h2>\n      <Row>\n        <label htmlFor=\"status-state\" className=\"label\">\n          Status State\n        </label>\n        <input\n          type=\"number\"\n          name=\"status-state\"\n          ref={statusStateInput}\n          value={ssCtx.value}\n          onChange={updateCheckboxes}\n          max=\"65535\"\n          min=\"0\"\n          val={ssCtx.value}\n          onFocus={(e) => e.currentTarget.select()}\n        />\n      </Row>\n\n      {statusStateRefs.map((el, ind) => (\n        <InputWrapper\n          label={el.label}\n          key={el.label}\n          decimalValue={el.val}\n          name={el.name || \"\"}\n        >\n          <input\n            type={el.type}\n            name={el.name}\n            ref={el.ref}\n            value={props.val || \"\"}\n            onChange={calcStatusState}\n          />\n        </InputWrapper>\n      ))}\n    </Card>\n  );\n};\nexport default StatusStateParser;\n","import { useContext } from \"react\";\n\nimport styled from \"styled-components\";\nimport StatusStateContext from \"../../store/status-state-context\";\n\nconst Pre = styled.pre`\n  text-align: left;\n  font-weight: bold;\n`;\n\nconst SamplePostBody = (props) => {\n  const ssCtx = useContext(StatusStateContext);\n\n  return (\n    <div>\n      <h2>Sample JSON POST Body:</h2>\n      <Pre>\n        {JSON.stringify(\n          { ...props.webData, status_state: ssCtx.value },\n          false,\n          4\n        )}\n      </Pre>\n    </div>\n  );\n};\nexport default SamplePostBody;\n","import { useState, useRef, useContext } from \"react\";\nimport Card from \"../UI/Card/Card\";\nimport InputWrapper from \"../UI/InputWrapper/InputWrapper\";\n\nimport \"./AdditionalWebFields.css\";\nimport SamplePostBody from \"../SamplePostBody/SamplePostBody\";\nimport StatusStateContext from \"../../store/status-state-context\";\n\nconst AdditionalWebFields = (props) => {\n  const [webData, setWebData] = useState({\n    id: \"987654321\",\n    key: \"007E307160BCB021BBA\",\n    trip_time: \"20\",\n    cur_val: \"0\",\n    trip_val: \"10\",\n  });\n  const idRef = useRef(null),\n    keyRef = useRef(null),\n    tripTimeRef = useRef(null),\n    curValRef = useRef(null),\n    tripRateRef = useRef(null);\n\n  const onChangeHandler = () => {\n    const inputDataObj = {\n      id: idRef.current.value,\n      key: keyRef.current.value,\n      trip_time: tripTimeRef.current.value,\n      cur_val: curValRef.current.value,\n      trip_val: tripRateRef.current.value,\n    };\n    setWebData({\n      ...inputDataObj,\n    });\n  };\n\n  const ssCtx = useContext(StatusStateContext);\n\n  return (\n    <Card>\n      <div className=\"web-fields-wrapper\">\n        <h2>Additional Web Fields:</h2>\n        <InputWrapper name=\"id\" label=\"Device ID\">\n          <input\n            name=\"id\"\n            ref={idRef}\n            type=\"number\"\n            value={webData.id}\n            min=\"0\"\n            max=\"999999999\"\n            onChange={onChangeHandler}\n          />\n        </InputWrapper>\n\n        <InputWrapper name=\"key\" label=\"Key\">\n          <input\n            name=\"key\"\n            ref={keyRef}\n            type=\"text\"\n            value={webData.key}\n            onChange={onChangeHandler}\n          />\n        </InputWrapper>\n\n        <InputWrapper\n          name=\"curVal\"\n          label={ssCtx.value & 2048 ? \"POLD ID\" : \"Flow %\"}\n        >\n          <input\n            name=\"curVal\"\n            ref={curValRef}\n            type=\"number\"\n            value={webData.cur_val}\n            min=\"0\"\n            max=\"255\"\n            onChange={onChangeHandler}\n          />\n        </InputWrapper>\n\n        <InputWrapper\n          name=\"tripTime\"\n          label={ssCtx.value & 2048 ? \"Alarm Mins\" : \"Trip Time\"}\n        >\n          <input\n            name=\"tripTime\"\n            ref={tripTimeRef}\n            type=\"number\"\n            value={webData.trip_time}\n            min=\"0\"\n            max=\"255\"\n            onChange={onChangeHandler}\n          />\n        </InputWrapper>\n\n        <InputWrapper\n          name=\"tripRate\"\n          label={ssCtx.value & 2048 ? \"Battery Level\" : \"Trip Rate\"}\n        >\n          <input\n            name=\"tripRate\"\n            ref={tripRateRef}\n            type=\"number\"\n            value={webData.trip_val}\n            min=\"0\"\n            max=\"255\"\n            onChange={onChangeHandler}\n          />\n        </InputWrapper>\n      </div>\n      <SamplePostBody webData={webData} />\n    </Card>\n  );\n};\nexport default AdditionalWebFields;\n","export default __webpack_public_path__ + \"static/media/lds-logo-white.461a7d0c.png\";","import { useState } from \"react\";\n\nimport StatusStateParser from \"./components/StatusStateParser/StatusStateParser\";\nimport AdditionalWebFields from \"./components/AdditionalWebFields/AdditionalWebFields\";\n\nimport logo from \"./assets/lds-logo-white.png\";\nimport classes from \"./App.module.css\";\nimport \"./App.css\";\n\nconst App = () => {\n\n  return (\n    <div className={classes.wrapper}>\n      <img src={logo} alt=\"\" className={classes.header_logo} />\n      <div className={classes.component_wrapper}>\n        <StatusStateParser />\n        <AdditionalWebFields />\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport {StatusStateContextProvider} from './store/status-state-context';\n\nReactDOM.render(\n  <StatusStateContextProvider>\n    <App />\n  </StatusStateContextProvider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}