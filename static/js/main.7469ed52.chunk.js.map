{"version":3,"sources":["App.module.css","components/ui/Row.module.css","components/ui/Utilities.module.css","components/ui/Card.module.css","components/ui/Row.js","components/ui/Input.js","components/ui/Card.js","components/StatusStateParser.js","components/AdditionalWebFields.js","components/SamplePostBody.js","assets/lds-logo-white.png","App.js","reportWebVitals.js","index.js"],"names":["module","exports","Row","props","className","classes","row","children","Input","ref","label","utilities","d_none","decimalValue","type","name","value","val","onChange","isChanged","forwardRef","Card","card","StatusStateParser","useState","statusState","setStatusState","statusStateRefs","useRef","statusStateInput","calcStatusState","newStatusState","forEach","el","current","checked","onStatusStateChange","htmlFor","statusStateInputVal","parseInt","statusStateFlagDec","inputRef","max","min","onFocus","e","currentTarget","select","map","ind","AdditionalWebFields","id","key","trip_time","cur_val","trip_val","webData","setWebData","idRef","keyRef","tripTimeRef","curValRef","tripRateRef","onChangeHandler","inputDataObj","onWebDataChange","SamplePostBody","jsonBody","status_state","JSON","stringify","App","wrapper","src","logo","alt","header_logo","component_wrapper","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7469ed52.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"App_wrapper__2Rh_f\",\"component_wrapper\":\"App_component_wrapper__26XYY\",\"header_logo\":\"App_header_logo__1FAbg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"row\":\"Row_row__OMCNy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"d_none\":\"Utilities_d_none__3dunw\",\"v_hidden\":\"Utilities_v_hidden__2EB4U\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__3_jzl\"};","import classes from './Row.module.css';\n\nconst Row = props => {\n  return <div className={classes.row}>{props.children}</div>;\n};\nexport default Row;","import { forwardRef } from \"react\";\n\nimport Row from \"./Row\";\nimport \"./Input.css\";\nimport utilities from \"./Utilities.module.css\";\n\nconst Input = (props, ref) => {\n  const onChangeHandler = () => {\n    props.isChanged();\n  };\n\n  return (\n    <Row>\n      <label className=\"label\">\n        {props.label}\n        <span className={utilities.d_none}>({props.decimalValue})</span>\n      </label>\n      <input\n        type={props.type}\n        name={props.name}\n        ref={ref}\n        value={props.val || ''}\n        onChange={onChangeHandler}\n      />\n    </Row>\n  );\n};\n\nexport default forwardRef(Input);\n","import classes from './Card.module.css';\n\nconst Card = props => {\n  return <div className={classes.card}>{props.children}</div>;\n};\nexport default Card;","import { useState, useRef } from \"react\";\n\nimport Input from \"./ui/Input\";\nimport Card from \"./ui/Card\";\nimport Row from \"./ui/Row\";\n\nimport \"./ui/Input.css\";\n\nconst StatusStateParser = (props) => {\n  const [statusState, setStatusState] = useState(0);\n\n  const statusStateRefs = [\n    {\n      label: \"alarm_none\",\n      ref: useRef(null),\n      val: 0,\n      type: \"radio\",\n      name: \"alarm_type\",\n    },\n    {\n      label: \"lds_leak\",\n      ref: useRef(null),\n      val: 1,\n      type: \"radio\",\n      name: \"alarm_type\",\n    },\n    {\n      label: \"partial\",\n      ref: useRef(null),\n      val: 2,\n      type: \"radio\",\n      name: \"alarm_type\",\n    },\n    {\n      label: \"panel_pold\",\n      ref: useRef(null),\n      val: 3,\n      type: \"radio\",\n      name: \"alarm_type\",\n    },\n    {\n      label: \"ext_pold\",\n      ref: useRef(null),\n      val: 4,\n      type: \"radio\",\n      name: \"alarm_type\",\n    },\n    {\n      label: \"low_bat\",\n      ref: useRef(null),\n      val: 5,\n      type: \"radio\",\n      name: \"alarm_type\",\n    },\n    {\n      label: \"remote_panel\",\n      ref: useRef(null),\n      val: 6,\n      type: \"radio\",\n      name: \"alarm_type\",\n    },\n    {\n      label: \"unused\",\n      ref: useRef(null),\n      val: 7,\n      type: \"radio\",\n      name: \"alarm_type\",\n    },\n    { label: \"in_alarm\", ref: useRef(null), val: 8, type: \"checkbox\" },\n    { label: \"flow_in_partial\", ref: useRef(null), val: 16, type: \"checkbox\" },\n    { label: \"flow_trip\", ref: useRef(null), val: 32, type: \"checkbox\" },\n    { label: \"is_moving\", ref: useRef(null), val: 64, type: \"checkbox\" },\n    { label: \"valve_open\", ref: useRef(null), val: 128, type: \"checkbox\" },\n    { label: \"b0_api_trigger\", ref: useRef(null), val: 256, type: \"checkbox\" },\n    { label: \"too_cold\", ref: useRef(null), val: 512, type: \"checkbox\" },\n    { label: \"chan_sel_away\", ref: useRef(null), val: 1024, type: \"checkbox\" },\n    { label: \"chan_mod\", ref: useRef(null), val: 2048, type: \"checkbox\" },\n    { label: \"override\", ref: useRef(null), val: 4096, type: \"checkbox\" },\n    { label: \"alarm_push\", ref: useRef(null), val: 8192, type: \"checkbox\" },\n    { label: \"standby\", ref: useRef(null), val: 16384, type: \"checkbox\" },\n    { label: \"shutdown\", ref: useRef(null), val: 32768, type: \"checkbox\" },\n  ];\n\n  const statusStateInput = useRef(null);\n\n  const calcStatusState = () => {\n    let newStatusState = 0;\n\n    statusStateRefs.forEach((el) => {\n      const refObj = el.ref.current;\n      if (refObj.checked) newStatusState += el.val;\n    });\n\n    props.onStatusStateChange(newStatusState);\n    setStatusState(newStatusState);\n  };\n\n  const updateCheckboxes = () => {\n    const statusStateInputVal = parseInt(statusStateInput.current.value) || 0;\n\n    statusStateRefs.forEach((el) => {\n      const statusStateFlagDec = el.val,\n        inputRef = el.ref;\n\n      if (statusStateFlagDec > 7) {\n        inputRef.current.checked =\n          (statusStateFlagDec & statusStateInputVal) === statusStateFlagDec;\n      } else {\n        inputRef.current.checked =\n          (7 & statusStateInputVal) === statusStateFlagDec;\n      }\n    });\n\n    props.onStatusStateChange(statusStateInputVal);\n    setStatusState(statusStateInputVal);\n  };\n\n  return (\n    <Card>\n      <h2>Status State Builder:</h2>\n      <Row>\n        <label htmlFor=\"status-state\" className=\"label\">\n          Status State\n        </label>\n        <input\n          type=\"number\"\n          name=\"status-state\"\n          ref={statusStateInput}\n          value={statusState}\n          onChange={updateCheckboxes}\n          max=\"65535\"\n          min=\"0\"\n          val={statusState}\n          onFocus={(e) => e.currentTarget.select()}\n        />\n      </Row>\n\n      {statusStateRefs.map((el, ind) => (\n        <Input\n          label={el.label}\n          key={el.label}\n          decimalValue={el.val}\n          isChanged={calcStatusState}\n          ref={el.ref}\n          type={el.type}\n          name={el.name || \"\"}\n        />\n      ))}\n    </Card>\n  );\n};\nexport default StatusStateParser;\n","import { useState, useRef } from \"react\";\nimport Card from \"./ui/Card\";\nimport Input from \"./ui/Input\";\n\nimport \"./AdditionalWebFields.css\";\n\nconst AdditionalWebFields = (props) => {\n  const [webData, setWebData] = useState({\n    id: \"987654321\",\n    key: \"007E307160BCB021BBA\",\n    trip_time: \"20\",\n    cur_val: \"0\",\n    trip_val: \"10\",\n  });\n  const idRef = useRef(null),\n    keyRef = useRef(null),\n    tripTimeRef = useRef(null),\n    curValRef = useRef(null),\n    tripRateRef = useRef(null);\n\n  const onChangeHandler = () => {\n    const inputDataObj = {\n      id: idRef.current.value,\n      key: keyRef.current.value,\n      trip_time: tripTimeRef.current.value,\n      cur_val: curValRef.current.value,\n      trip_val: tripRateRef.current.value,\n    };\n    setWebData({\n      ...inputDataObj,\n    });\n    props.onWebDataChange(inputDataObj);\n  };\n\n  return (\n    <Card>\n      <div className=\"web-fields-wrapper\">\n        <h2>Additional Web Fields:</h2>\n        <Input\n          type=\"number\"\n          name=\"id\"\n          ref={idRef}\n          label=\"Device ID\"\n          val={webData.id}\n          isChanged={onChangeHandler}\n        />\n        <Input\n          type=\"text\"\n          name=\"key\"\n          ref={keyRef}\n          label=\"Key\"\n          val={webData.key}\n          isChanged={onChangeHandler}\n        />\n        <Input\n          type=\"number\"\n          name=\"curVal\"\n          ref={curValRef}\n          label=\"Flow %\"\n          val={webData.cur_val}\n          isChanged={onChangeHandler}\n        />\n        <Input\n          type=\"number\"\n          name=\"tripTime\"\n          ref={tripTimeRef}\n          label=\"Trip Time\"\n          val={webData.trip_time}\n          isChanged={onChangeHandler}\n        />\n        <Input\n          type=\"number\"\n          name=\"tripRate\"\n          ref={tripRateRef}\n          label=\"Trip Rate\"\n          val={webData.trip_val}\n          isChanged={onChangeHandler}\n        />\n      </div>\n    </Card>\n  );\n};\nexport default AdditionalWebFields;\n","import Card from \"./ui/Card\";\n\nconst SamplePostBody = (props) => {\n  const jsonBody = {\n    ...props.webData,\n    status_state: props.statusState\n  }\n\n  return <Card>\n    <h2>Sample JSON POST Body:</h2>\n    <pre>\n      {JSON.stringify(jsonBody, false, 4)}\n    </pre>\n  </Card>;\n};\nexport default SamplePostBody;\n","export default __webpack_public_path__ + \"static/media/lds-logo-white.461a7d0c.png\";","import { useState } from \"react\";\n\nimport StatusStateParser from \"./components/StatusStateParser\";\nimport AdditionalWebFields from \"./components/AdditionalWebFields\";\nimport SamplePostBody from \"./components/SamplePostBody\";\n\nimport logo from \"./assets/lds-logo-white.png\";\nimport classes from \"./App.module.css\";\nimport \"./App.css\";\n\nconst App = () => {\n  const [statusState, setStatusState] = useState(0);\n  const [webData, setWebData] = useState({\n    id: \"987654321\",\n    key: \"007E307160BCB021BBA\",\n    trip_time: \"20\",\n    cur_val: \"0\",\n    trip_val: \"10\",\n  });\n\n  const statusStateChangeHandler = (statusState) => {\n    setStatusState(statusState);\n  };\n\n  const webDataChangeHandler = (webData) => {\n    setWebData({\n      ...webData,\n    });\n  };\n\n  return (\n    <div className={classes.wrapper}>\n      <img src={logo} alt=\"\" className={classes.header_logo} />\n      <div className={classes.component_wrapper}>\n        <StatusStateParser onStatusStateChange={statusStateChangeHandler} />\n        <AdditionalWebFields onWebDataChange={webDataChangeHandler} />\n        <SamplePostBody statusState={statusState} webData={webData} />\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}